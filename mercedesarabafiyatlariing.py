# -*- coding: utf-8 -*-
"""MercedesArabaFiyatlariIng.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gc4gUwvdQsvnOTQVJmXQtbkiMX4dyF5L
"""

import pandas as pd
import numpy as np
import seaborn as sbn
import matplotlib.pyplot as plt
import tensorflow as tf

from sklearn.preprocessing import MinMaxScaler
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error,mean_absolute_error

from keras.models import Sequential
from keras.layers import Dense

dataset=pd.read_csv("/content/merc.csv")
dataset.describe()

dataset.info()
#Verisetinin tamamı ile ilgili bilgiler

dataset.corr()          #her değer arasındaki ilişki (korelasyon) oranı

#- ler ters ilişkiyi ifade ediyor. Örneğin yıl arttıkça mileage azalıyor.  + değerler eş zamanlı arttığını ya da azaldığını gösteriyor. yine yıl arttıkça fiyatta artıyor gibi

sbn.scatterplot(x="mileage",y="price",data=dataset)

#Tabloda da görüldüğü üzere yaklaşık 160000 üzeri fiyatlar sayılabiliecek kadar az ve bunlar bizim işlem yaparken sapmamıza neden olacak

dataset.sort_values("price",ascending=False).head(20)

doksandokuz=dataset.sort_values("price",ascending=False).iloc[131:]
doksandokuz.describe()

plt.figure(figsize=(8,12),facecolor="w",edgecolor="w")
sbn.displot(doksandokuz["price"])
sbn.displot(dataset["price"])

dataset.groupby("year").mean()["price"]

dataset[dataset.year!=1970].groupby("year").mean()["price"]

dataset=doksandokuz
dataset=dataset[dataset.year!=1970]
dataset

dataset=dataset.drop(["transmission","fuelType","model"],axis=1)
dataset

sbn.displot(dataset["price"])

y=dataset["price"].values
x=dataset.drop("price",axis=1).values

x

y

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3,random_state=10)

scaler=MinMaxScaler()
x_train=scaler.fit_transform(x_train)
x_test=scaler.fit_transform(x_test)

model=Sequential()

model.add(Dense(12,activation="relu"))
model.add(Dense(12,activation="relu"))
model.add(Dense(12,activation="relu"))
model.add(Dense(12,activation="relu"))

model.add(Dense(1))

model.compile(optimizer="adam",loss="mse")

model.fit(x=x_train,y=y_train,validation_data=(x_test,y_test),batch_size=250,epochs=300)

kayipVerisi=pd.DataFrame(model.history.history)
kayipVerisi
kayipVerisi.plot()

#Bu ford'un veri setinde ezbere girmişti burada bi sorun yok

tahminDizisi=model.predict(x_test)
tahminDizisi

mean_absolute_error(y_test,tahminDizisi)

dataset.describe()
#ilk denememde ortalama fiyat 24 bin iken benim sapma miktarım 3500 dolar model iyileştirilse daha iyi olur ama şu an devam edelim

plt.scatter(y_test,tahminDizisi)
plt.plot(y_test,y_test,"g-*")       #y_test lerdewn ne kadar sapmışlar grafikte görelim
dataset.iloc[15]

yeniAraba=dataset.drop("price",axis=1).iloc[15]
yeniAraba

yeniAraba=scaler.transform(yeniAraba.values.reshape(-1,5))
model.predict(yeniAraba)

"""arabanın fiyatı 63 bin iken bu modelle
42 bin civarında buldum. Bu büyük bi soruna neden olabilir.
Onun için modeli iyileştimem gerekmektedir.
"""